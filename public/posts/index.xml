<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Orion&#39;s Blog</title>
    <link>//localhost:1313/posts/</link>
    <description>Recent content in Posts on Orion&#39;s Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Aug 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="//localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IDM冻结试用期方法</title>
      <link>//localhost:1313/posts/idm%E5%86%BB%E7%BB%93%E8%AF%95%E7%94%A8%E6%9C%9F%E6%96%B9%E6%B3%95/</link>
      <pubDate>Fri, 29 Aug 2025 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/idm%E5%86%BB%E7%BB%93%E8%AF%95%E7%94%A8%E6%9C%9F%E6%96%B9%E6%B3%95/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;原文：https://github.com/lstprjct/IDM-Activation-Script/blob/main/README.md&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;方法-1---powershell--推荐&#34;&gt;方法 1 - PowerShell  【推荐】&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;右键点击 Windows 开始菜单，选择 &lt;strong&gt;PowerShell&lt;/strong&gt; 或 &lt;strong&gt;终端&lt;/strong&gt;（不是 CMD）。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;复制粘贴以下代码并按回车：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;iex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;irm &lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;gd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;idm_reset&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;http://img.orionyoung.com/pic/202501152004917.png&#34; alt=&#34;image-20250115200432670&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;你将看到激活选项，按照屏幕上的指示操作即可。  选【2】&lt;/p&gt;&#xA;&lt;p&gt;【1】激活&lt;/p&gt;&#xA;&lt;p&gt;【2】冻结试用期&lt;/p&gt;&#xA;&lt;p&gt;【3】重置试用期&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;完成。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://img.orionyoung.com/pic/202501152003947.png&#34; alt=&#34;image-20250115200349781&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;输入2回车后，会自动下载几个文件，不用管，直到出现成功的绿字，成功冻结&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;http://img.orionyoung.com/pic/202501152007027.png&#34; alt=&#34;image-20250115200720863&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;方法-2---传统方法&#34;&gt;方法 2 - 传统方法&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;从 GitHub 下载文件。&lt;/li&gt;&#xA;&lt;li&gt;右键点击下载的 zip 文件并解压。&lt;/li&gt;&#xA;&lt;li&gt;在解压后的文件夹中，运行名为 &lt;strong&gt;IAS.cmd&lt;/strong&gt; 的文件。&lt;/li&gt;&#xA;&lt;li&gt;你将看到激活选项，按照屏幕上的指示操作即可。&lt;/li&gt;&#xA;&lt;li&gt;完成。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;信息&#34;&gt;信息&lt;/h3&gt;&#xA;&lt;h4 id=&#34;冻结试用期&#34;&gt;冻结试用期&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;IDM 提供 30 天试用期，你可以使用脚本中的此选项将试用期永久锁定，这样你就不需要再次重置试用期，且试用期不会过期。&lt;/li&gt;&#xA;&lt;li&gt;此方法在应用此选项时需要联网。&lt;/li&gt;&#xA;&lt;li&gt;可以直接安装 IDM 更新，无需再次冻结试用期。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;激活&#34;&gt;激活&lt;/h4&gt;&#xA;&lt;p&gt;（*目前不可用）&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;此脚本通过注册表锁定方法来激活 Internet Download Manager (IDM)。&lt;/li&gt;&#xA;&lt;li&gt;此方法在激活时需要联网。&lt;/li&gt;&#xA;&lt;li&gt;可以直接安装 IDM 更新，无需再次激活。&lt;/li&gt;&#xA;&lt;li&gt;激活后，如果某些情况下 IDM 开始显示激活提示屏幕，只需再次运行激活选项，无需使用重置选项。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;重置-idm-激活试用期&#34;&gt;重置 IDM 激活/试用期&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Internet Download Manager 提供 30 天试用期，你可以随时使用此脚本来重置激活/试用期。&lt;/li&gt;&#xA;&lt;li&gt;此选项也可用于恢复状态，例如 IDM 报告虚假序列号或其他类似错误时。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;系统要求&#34;&gt;系统要求&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;该项目支持 Windows 7/8/8.1/10/11 及其服务器版本。&lt;/li&gt;&#xA;&lt;li&gt;运行 IAS 的 PowerShell 方法支持 Windows 8 及更高版本。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;高级信息&#34;&gt;高级信息&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要在无人值守模式下激活，请使用 &lt;code&gt;/act&lt;/code&gt; 参数运行脚本。&lt;/li&gt;&#xA;&lt;li&gt;要在无人值守模式下冻结试用期，请使用 &lt;code&gt;/frz&lt;/code&gt; 参数运行脚本。&lt;/li&gt;&#xA;&lt;li&gt;要在无人值守模式下重置，请使用 &lt;code&gt;/res&lt;/code&gt; 参数运行脚本。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;工作原理&#34;&gt;工作原理&lt;/h3&gt;&#xA;&lt;p&gt;IDM 将试用和激活相关的数据存储在各种注册表项中。其中一些注册表项被锁定以防止篡改，并且数据以某种模式存储以跟踪虚假序列号问题和剩余试用天数。此脚本通过触发 IDM 中的一些下载来生成这些注册表项，识别这些注册表项并锁定它们，使 IDM 无法编辑和查看它们。这样，IDM 就无法显示“使用虚假序列号激活”的警告。&lt;/p&gt;</description>
    </item>
    <item>
      <title>手撕LRU（Go语言版本）</title>
      <link>//localhost:1313/posts/%E6%89%8B%E6%92%95lru/</link>
      <pubDate>Wed, 27 Aug 2025 00:00:00 +0000</pubDate>
      <guid>//localhost:1313/posts/%E6%89%8B%E6%92%95lru/</guid>
      <description>&lt;h2 id=&#34;1使用containerlist实现&#34;&gt;1.使用container/list实现&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;首先，我们要了解标准库中的双向链表list&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;标准库list详解&#34;&gt;标准库list详解&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;list.go源文件https://cs.opensource.google/go/go/+/refs/tags/go1.24.2:src/container/list/list.go&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;在 Go 语言的 &lt;code&gt;container/list&lt;/code&gt; 包中，&lt;code&gt;Element&lt;/code&gt; 结构体代表双向链表中的一个节点。该结构体的定义以及相关字段的用途如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 指向前一个和后一个元素的指针&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;prev&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 指向该元素所在链表的指针&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;List&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;c1&#34;&gt;// 存储在该元素中的值&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nx&#34;&gt;Value&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;interface&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下面详细解释 &lt;code&gt;Element&lt;/code&gt; 结构体的各个字段：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;code&gt;next&lt;/code&gt; 和 &lt;code&gt;prev&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;类型为 &lt;code&gt;*Element&lt;/code&gt;，也就是指向 &lt;code&gt;Element&lt;/code&gt; 结构体的指针。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;next&lt;/code&gt; 指向链表中的下一个元素，&lt;code&gt;prev&lt;/code&gt; 指向链表中的前一个元素。借助这两个指针，链表能够实现双向遍历。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;list&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;类型为 &lt;code&gt;*List&lt;/code&gt;，即指向 &lt;code&gt;List&lt;/code&gt; 结构体的指针。&lt;/li&gt;&#xA;&lt;li&gt;此指针指向该元素所在的链表，其作用在于确保元素和链表之间的关联，并且在对元素进行操作时，能够保证操作的正确性。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&lt;code&gt;Value&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;类型为 &lt;code&gt;interface{}&lt;/code&gt;，这意味着它能够存储任意类型的值。&lt;/li&gt;&#xA;&lt;li&gt;该字段用于存放用户在链表节点中存储的数据。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Element定义了&lt;code&gt;Next()&lt;/code&gt;和&lt;code&gt;Prev()&lt;/code&gt;方法，定义如下：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Next returns the next list element or nil.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;next&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;// Prev returns the previous list element or nil.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;Prev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Element&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;prev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;e&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;root&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;p&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;总的来说，这两个方法的执行逻辑是：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
